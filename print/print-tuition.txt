// File: tuition-c/P001.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P001.c

//sample code
// Author - Amit Dutta, Date - Unknown

#include<stdio.h>
int main() {
	printf("Hello world");
	return 0;
}

/* --- End of tuition-c/P001.c --- */

// File: tuition-c/P002.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P002.c

//sample code with a new line charecter
// Author - Amit Dutta, Date - Unknown

#include<stdio.h>
int main() {
	printf("Hello\nworld");
	return 0;
}

/* --- End of tuition-c/P002.c --- */

// File: tuition-c/P003.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P003.c

//WAP to perform addtion and multiplication of two integer numbers
// Author - Amit Dutta, Date - Unknown

#include<stdio.h>
int main() {
	int a, b, sum, multi;
	printf("Enter the 1st number : ");
	scanf("%d",&a);
	printf("Enter the 2nd number : ");
	scanf("%d",&b);
	sum = a + b;
	multi = a * b;
	printf("\nSum = %d"
		   "\nMultiplication = %d",sum,multi);
	return 0;
}

/* --- End of tuition-c/P003.c --- */

// File: tuition-c/P004.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P004.c

/* WAP to find and display the value of given expression :
((x+3)/4) - ((2x+4)/3) taking the value of x = 5 */
// Author - Amit Dutta, Date - Unknown

#include<stdio.h>
int main() {
	double x =5, result;
	result = ((x + 3) / 4) - ((2 * x + 4) / 3);
	printf("Result = %lf",result);
	return 0;
}

/* --- End of tuition-c/P004.c --- */

// File: tuition-c/P005.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P005.c

/* A person is paid Rs. 455 for each day he works and fined
Rs. 150 for each day he remains absent. WAP to calculate his
monthly income taking the number of days present as input. */
// Author - Amit Dutta, Date - Unknown

#include<stdio.h>
int main() {
	int daily_wage = 455, fine = 150, present, absent, income;
	printf("No of days present : ");
	scanf("%d", &present);
	absent = 30 - present;
	income = (present * 455) - (absent * 150);
	printf("\nIncome : %d",income);
	return 0;
}

/* --- End of tuition-c/P005.c --- */

// File: tuition-c/P006.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P006.c

/* The normal temperature of human body
is 98.6 Degree Fahrenheit. WAP to convert the temperature
to Degree Celcius and display the output. */
// Author - Amit Dutta, Date - Unknown

#include<stdio.h>
int main() {
	double f = 98.6, c;
	c = ((f - 32) * 5) / 9;
	printf("Temperature in Celcius is : %lf",c);
	return 0;
}

/* --- End of tuition-c/P006.c --- */

// File: tuition-c/P007.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P007.c

/* A shopkeeper offers 10% discount on printed
price of a digital camera. However a customer has
to pay 6% GST on the remaining amount. WAP to
calculate and display the amount to paid by the
customer, taking the printed price as input. */
// Author - Amit Dutta, Date - Unknown

#include<stdio.h>
int main() {
	double mrp, final_price, temp;
	printf("Enter the printed price : ");
	scanf("%lf", &mrp);
	temp = mrp * 0.90;
	final_price = temp * 1.06;
	printf("\nCustomer have to pay : %lf", final_price);
	return 0;
}

/* --- End of tuition-c/P007.c --- */

// File: tuition-c/P008.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P008.c

/* A shopkeeper offers 30% discount on purchasing an
item whereas the other shopkeeper offers 2 successive
discount of 20% and 10% for purchasing the same item.
WAP to caompute and display the discounted price of the
item by taking the price as input. */
// Author - Amit Dutta, Date - Unknown

#include<stdio.h>
int main() {
	double mrp, shop1, shop2, temp;
	printf("Enter the price : ");
	scanf("%lf", &mrp);
	shop1 = mrp * 0.70;
	temp = mrp * 0.80;
	shop2 = temp * 0.90;
	printf("\nShopkeeper 1 price : %lf"
			"\nShopkeeper 2 price : %lf",shop1,shop2);
	return 0;
}

/* --- End of tuition-c/P008.c --- */

// File: tuition-c/P009.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P009.c

/* WAP to calculate gross and net salary
by accepting basic salary as input.
IMP :	DA = 30% of Basic Pay
		HRA = 20% of Basic Pay
		PF = 12.5% of Basic Pay
 Gross Salary = Basic Pay + DA + HRA
 Net Salary = Gross Salary - PF
*/
// Author - Amit Dutta, Date - Unknown

#include<stdio.h>
int main() {
	double bs, da, hra, pf, gs, ns;
	printf("Enter the Basic Salary : ");
	scanf("%lf", &bs);
	da = bs * 0.3;
	hra = bs * 0.2;
	pf = bs * 0.125;
	gs = bs + da + hra;
	ns = gs - pf;
	printf("\nGross Salary : %lf"
		   "\nNet Salary   : %lf", gs, ns);
	return 0;
}

/* --- End of tuition-c/P009.c --- */

// File: tuition-c/P010.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P010.c

/* WAP to find and display the difference
between compound Interest and Simple Interest.
Take principle amount as input.
Hint :	si = (p * r * t) / 100
		a = p * ((1 + (r / 100)) ^ t)
		ci = a - p
*/
// Author - Amit Dutta, Date - Unknown

#include<stdio.h>
#include<math.h>
int main() {
	double p, r, t, si, a, ci, dif;
	printf("Enter the principle amount, rate of interest, time in year : ");
	scanf("%lf %lf %lf", &p, &r, &t);
	si = (p * r * t) / 100;
	a = p * pow((1 + (r / 100)), t);
	ci = a - p;
	dif = ci - si;
	printf("\nSimple Interest     : %lf"
		   "\nCompound Interest   : %lf"
		   "\nInterest Difference : %lf", si, ci, dif);
	return 0;
}

/* --- End of tuition-c/P010.c --- */

// File: tuition-c/P011.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P011.c

/* The time period of a simple pendulam is
given by the formula :
	t = 2 * pi * square_root(l / g)
WAP to calculate T take length(L) and gravity
as input
*/
// Author - Amit Dutta, Date - Unknown

#include<stdio.h>
#include<math.h>
int main() {
	double l, g, t;
	printf("Enter the Length and Gravity measures : ");
	scanf("%lf %lf", &l, &g);
	t = 2 * M_PI * sqrt(l / g);
	// using M_PI variable for PI value from math.h header file
	printf("\nTime Period : %lf", t);
	return 0;
}

/* --- End of tuition-c/P011.c --- */

// File: tuition-c/P012.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P012.c

/* WAP to swap two integer variable without
using third  variable */
// using Approch Mode : simple, slow, time consuming
// Author - Amit Dutta, Date - Unknown

#include<stdio.h>
int main() {
	int a = 4, b = 6;
	printf("Before Swap : A = %d, B = %d", a, b);
	a = a + b;
	b = a - b;
	a = a - b;
	printf("\nAfter Swap : A = %d, B = %d", a, b);
	return 0;
}

/* --- End of tuition-c/P012.c --- */

// File: tuition-c/P013.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P013.c

/* WAP to swap two integer variable without
using third  variable */
// using Approch Mode : complex, fast, less time consumimg
// Author - Amit Dutta, Date - Unknown

#include<stdio.h>
#include<math.h>
int main() {
	int a = 4, b = 6;
	printf("Before Swap : A = %d, B = %d", a, b);
	a = a ^ b;
	b = a ^ b;
	a = a ^ b;
	printf("\nAfter Swap : A = %d, B = %d", a, b);
	return 0;
}

/* --- End of tuition-c/P013.c --- */

// File: tuition-c/P014.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P014.c

/* WAP to accept the diagonal of
square. Find and display the area and
perimeter of the square. */
// Author - Amit Dutta, Date - Unknown

#include<stdio.h>
#include<math.h>
int main() {
	double d, side, area, per;
	printf("Enter the diagonal : ");
	scanf("%lf", &d);
	side =  d / sqrt (2);
	area = side * side;
	per = 4 * side;
	printf("\nArea of the Square      : %lf"
		   "\nPerimeter of the Square : %lf", area, per);
	return 0;
}

/* --- End of tuition-c/P014.c --- */

// File: tuition-c/P015.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P015.c

/*WAP to accept number of days and
display it after converting into
number of years, months and days */
// Author - Amit Dutta, Date - Unknown

#include<stdio.h>
int main() {
	int day, month, year, temp;
	printf("Enter the number of days : ");
	scanf("%d", &day);
	temp = day;
	year = day / 365;
	day = day % 365;
	month = day / 30;
	day = day % 30;
	printf("\n%d Days = %d Years %d Months %d Days", temp, year, month, day);
	return 0;
}

/* --- End of tuition-c/P015.c --- */

// File: tuition-c/P016.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P016.c

/* WAP to calculate and display radius of a
circle by taking the area as input */
// Author - Amit Dutta, Date - Unknown

#include<stdio.h>
#include<math.h>
int main() {
	double area, r;
	printf("Enter the area of a circle : ");
	scanf("%lf", &area);
	r = sqrt((7 * area) / 22);
	printf("\nRadius : %lf", r);
	return 0;
}

/* --- End of tuition-c/P016.c --- */

// File: tuition-c/P017.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P017.c

/* Find maximum between three number. */
// Author - Amit Dutta, Date - Unknown

#include <stdio.h>
int main()
{
    int a, b, c, max;
    printf("Enter the value for a, b, c : ");
    scanf("%d %d %d", &a, &b, &c);
    max = a;
    if (max < b)
        max = b;
    if (max < c)
        max = c;
    printf("Maximum : %d", max);
    return 0;
}
/* --- End of tuition-c/P017.c --- */

// File: tuition-c/P018.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P018.c

/* WAP to input the cost price and selling price and
calculate profit, profit percentage, loss percentage or
display the manage nither profit nor loss. */
// Author - Amit Dutta, Date - Unknown

#include <stdio.h>
int main()
{
    double cost, sell, pro, prop, loss, lossp;
    printf("Enter the cost and selling price : ");
    scanf("%lf %lf", &cost, &sell);
    if (sell > cost)
    {
        pro = sell - cost;
        prop = (pro / cost) * 100;
        printf("Profit : RS %g, Profit Percentage : %g", pro, prop);
    }
    else if (sell < cost)
    {
        loss = cost - sell;
        lossp = (loss / cost) * 100;
        printf("Loss   : RS %g, Loss Percentage   : %g", loss, lossp);
    }
    else
        printf("Neither loss nor Profit.");
    return 0;
}
/* --- End of tuition-c/P018.c --- */

// File: tuition-c/P019.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P019.c

/* WAP to input the distance covered and calculate
the amount to be paid by the passanger.
    Distance        Rate
    =<5KM           RS 90
    next 10KM       RS 20/KM
    next 10KM       RS 10/KM
    more than 25KM  RS 9/KM
*/
// Author - Amit Dutta, Date - Unknown

#include <stdio.h>
int main()
{
    double dis, amt;
    printf("Enter the distance : ");
    scanf("%lf", &dis);
    if (dis <= 5.0)
        amt = 90.0;
    else if (dis > 5.0 && dis <= 15.0)
        amt = 90.0 + (dis - 5.0) * 20;
    else if (dis > 15.0 && dis <= 25.0)
        amt = 90.0 + 200.0 + (dis - 15.0) * 10;
    else if (dis > 25.0)
        amt = 90.0 + 200.0 + 100.0 + (dis - 25.0) * 9;
    printf("\nAmount to be paid : %g", amt);
    return 0;
}
/* --- End of tuition-c/P019.c --- */

// File: tuition-c/P020.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P020.c

/* WAP to calculate and display the maturity amount
taking the sum and number of days as input.
    No. of Days         Rate of Interest
    Upto 180 days       5.5 %
    181 to 364 days     7.5 %
    exact 365 days      9.0 %
    more than 365 days  8.5 %
*/
// Author - Amit Dutta, Date - Unknown

#include <stdio.h>
int main()
{
    double nod, amt, s, i;
    printf("Enter the amount and the time in days : ");
    scanf("%lf %lf", &s, &nod);
    if (nod <= 180)
        i = (s * 5.5 * (nod / 365)) / 100;
    else if (nod > 180.0 && nod <= 364.0)
        i = (s * 7.5 * (nod / 365)) / 100;
    else if (nod == 365.0)
        i = (s * 9.0 * 1) / 100;
    else if (nod > 365.0)
        i = (s * 8.5 * (nod / 365)) / 100;
    amt = s + i;
    printf("Amount to be paid : %g", amt);
    return 0;
}
/* --- End of tuition-c/P020.c --- */

// File: tuition-c/P021.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P021.c

/* WAP to input a positive number and check if it is a perfect
square number or not. */
/* Author - Amit Dutta, Date - 8th OCT, 2025 */
// This code has not been compiled. 
// If you find any issues, please create a new issue on GitHub regarding them.

#include <stdio.h>
#include <math.h>
int main()
{
    int n, temp;
    double sr;
    printf("Enter the number : ");
    scanf("%d", &n);
    sr = sqrt(n);
    temp = (int)sr;
    if (temp * temp == n)
        printf("\nThis is a perfect square.");
    else
        printf("\nThis is not a perfect square.");
    return 0;
}
/* --- End of tuition-c/P021.c --- */

// File: tuition-c/P022.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P022.c

/* WAP to find out smallest of three numbers without using if_else block. */
/* Author - Amit Dutta, Date - 8th OCT, 2025 */
// This code has not been compiled. 
// If you find any issues, please create a new issue on GitHub regarding them.

#include <stdio.h>
int main()
{
    int a, b, c, min;
    printf("Enter three number : ");
    scanf("%d %d %d", &a, &b, &c);
    min = (a < b && a < c) ? a : (b < a && b < c) ? b
                                                  : c;
    printf("Minimum = %d", min);
    return 0;
}
/* --- End of tuition-c/P022.c --- */

// File: tuition-c/P023.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P023.c

/* WAP to input the total cost and compute the amount to be paid
by the customer.  */
/* Author - Amit Dutta, Date - 8th OCT, 2025 */
// This code has not been compiled. 
// If you find any issues, please create a new issue on GitHub regarding them.

#include <stdio.h>
int main()
{
    double cost, amt;
    printf("Enter the total cost : ");
    scanf("%lf", &cost);
    if (cost <= 2000)
        amt = cost * 0.94;
    else if (cost > 2000 && cost <= 5000)
        amt = cost * 0.9;
    else if (cost > 5000 && cost <= 10000)
        amt = cost * 0.85;
    else if (cost > 10000)
        amt = cost * 0.8;
    printf("\nAmount to be paid : %g", amt);
    return 0;
}
/* --- End of tuition-c/P023.c --- */

// File: tuition-c/P024.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P024.c

/* WAP to check whether a year is leapyear or not. */
/* Author - Amit Dutta, Date - 8th OCT, 2025 */
// This code has not been compiled. 
// If you find any issues, please create a new issue on GitHub regarding them.

#include <stdio.h>
int main()
{
    int year;
    printf("Enter the year : ");
    scanf("%d", &year);
    if (year % 4 == 0 && year % 100 != 0)
        printf("\nYear %d is a leapyear.", year);
    else if (year % 400 == 0)
        printf("\nYear %d is a leapyear (Century).", year);
    else
        printf("\nYear %d is not a leapyear.", year);
    return 0;
}
/* --- End of tuition-c/P024.c --- */

// File: tuition-c/P025.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P025.c

/* WAP to input the electricity unit consumed and calculate the total
bill amount according to the given condition :
    for 1st 50 unit            Rs. 0.50 per unit
    next 100 unit              Rs. 0.75 per unit
    next 100 unit              Rs. 1.20 per unit
    above 250 unit             Rs. 1.50 per unit
And additional charge of 20 percent is added to the bill.
*/
/* Author - Amit Dutta, Date - 8th OCT, 2025 */
// This code has not been compiled. 
// If you find any issues, please create a new issue on GitHub regarding them.

#include <stdio.h>
int main()
{
    double unit, amt;
    printf("Enter the electricity consp(unit) : ");
    scanf("%lf", &amt);
    if (unit <= 50)
        amt = unit * 0.50;
    else if (unit > 50 && unit <= 50)
        amt = 25 + ((unit - 50) * 0.75);
    else if (unit > 150 && unit <= 250)
        amt = 25 + 75 + ((unit - 150) * 1.20);
    else if (unit > 250)
        amt = 25 + 75 + 120 + ((unit - 250) * 1.50);
    amt = amt * 1.20;
    printf("\nAmount to be paid : %g", amt);
    return 0;
}
/* --- End of tuition-c/P025.c --- */

// File: tuition-c/P026.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P026.c

/* WAP to input sum (p), rate of interest (r), time (t) and type of interest
('s' for simple interest amd 'c' for compound interest). Calculate and display
the interest earned
    si = (p * r * t) / 100
    compoundInterest = p * ((1 + r / 100)^t - 1)
*/
/* Author - Amit Dutta, Date - 8th OCT, 2025 */

#include <stdio.h>
#include <math.h>
#include <ctype.h>
int main()
{
    double principalAmount, rateOfInterest, timePeriod, simpleInterest, compoundInterest;
    char mode;
    printf("Enter the principle amount, Rate of interest, Time : ");
    scanf("%lf %lf %lf", &principalAmount, &rateOfInterest, &timePeriod);
    printf("\nEnter the mode ('s' : simple interest, 'c' : compound interest) : ");
    scanf(" %c", &mode);
    mode = tolower(mode);
    switch (mode)
    {
    case 's':
        simpleInterest = (principalAmount * rateOfInterest * timePeriod) / 100;
        printf("\nSimple Interest : %g", simpleInterest);
        break;
    case 'c':
        compoundInterest = principalAmount * (pow((1 + rateOfInterest / 100), timePeriod) - 1);
        printf("\nCompound Interest : %g", compoundInterest);
        break;
    default:
        printf("\nInvalid Input");
        return 1;
    }
    return 0;
}
/* --- End of tuition-c/P026.c --- */

// File: tuition-c/P027.c
// URL: https://github.com/notamitgamer/bsc/blob/main/tuition-c/P027.c

/*  Purchase        Discount on     Discount on
     Amount            Laptop         Desktop
    --------        -----------     -----------
    Upto 20k            3.0%            5.0%
    20001 - 50k         5.0%            7.5%
    50001 - 75k         7.5%           10.5%
    more than 75k      10.0%           15.0%
WAP to input amount of purchase and type of purchase ('L' : laptop, 'D' : desktop)
and display the discount amount and the discounted price (Net Amount).
*/
/* Author - Amit Dutta, Date - 8th OCT, 2025 */
// This code has not been compiled.
// If you find any issues, please create a new issue on GitHub regarding them.

#include <stdio.h>
#include <ctype.h>
int main()
{
    double principal_amount, desktop_discount, laptop_discount, discount_amount, discounted_price;
    char choice;
    printf("Enter the purchase amount : ");
    scanf("%lf", &principal_amount);
    printf("Type of purchase ('L' : Laptop, 'D' : Desktop) : ");
    scanf(" %c", &choice);
    choice = toupper(choice);
    if (principal_amount <= 20000)
    {
        laptop_discount = 0.03;
        desktop_discount = 0.05;
    }
    else if (principal_amount > 20000 && principal_amount <= 50000)
    {
        laptop_discount = 0.05;
        desktop_discount = 0.075;
    }
    else if (principal_amount > 50000 && principal_amount <= 75000)
    {
        laptop_discount = 0.075;
        desktop_discount = 0.105;
    }
    else if (principal_amount > 75000)
    {
        laptop_discount = 0.1;
        desktop_discount = 0.15;
    }
    switch (choice)
    {
    case 'L':
        discount_amount = principal_amount * laptop_discount;
        discounted_price = principal_amount - discount_amount;
        printf("\nDiscount Amount : %g"
               "\nDiscounted Price : %g",
               discount_amount, discounted_price);
        break;
    case 'D':
        discount_amount = principal_amount * desktop_discount;
        discounted_price = principal_amount - discount_amount;
        printf("\nDiscount Amount : %g"
               "\nDiscounted Price : %g",
               discount_amount, discounted_price);
        break;
    default:
        printf("\nInvalid Input.");
        return 1;
    }
    return 0;
}
/* --- End of tuition-c/P027.c --- */