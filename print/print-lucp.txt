// File: letusc/lucproblem001.c
// URL: https://github.com/notamitgamer/bsc/blob/main/letusc/lucproblem001.c

/* Consider a currency system in which there are notes of six denominations,
namely, Rs. 1, Rs. 2, rs. 5, Rs. 10, Rs. 50, Rs. 100. If a sum
of Rs. N is entered through the keyboard, Write a program to compute
the smallest number of notes that will combine to give Rs. N. */
/* Author - Amit Dutta, Date - 29th SEP, 2025 */
/* Let Us C, Chap - 2, Page - 22, Problem 2.3 */

#include <stdio.h>
int main()
{
    int n, nonotes, temp;
    printf("Enter the amount : ");
    scanf("%d", &n);
    if (n < 1)
    {
        printf("\nAmount should be a positive integer.");
        return 1;
    }
    temp = n;
    nonotes = n / 100;
    n = n % 100;
    nonotes = nonotes + (n / 50);
    n = n % 50;
    nonotes = nonotes + (n / 10);
    n = n % 10;
    nonotes = nonotes + (n / 5);
    n = n % 5;
    nonotes = nonotes + (n / 2);
    n = n % 2;
    nonotes = nonotes + n;
    printf("\nthe smallest number of notes that will combine to give Rs. %d : %d", temp, nonotes);
    return 0;
}
/* --- End of letusc/lucproblem001.c --- */

// File: letusc/lucproblem002.c
// URL: https://github.com/notamitgamer/bsc/blob/main/letusc/lucproblem002.c

/* A year is entered through the keyboard, write a program to
determine whether the year is leap or not. Use the logical operators
&& and || . */
/* Author - Amit Dutta, Date - 02th OCT, 2025 */
/* Let Us C, Chap - 4, Page - 64, Problem 4.1 */

#include <stdio.h>
int main()
{
    int year;
    printf("Enter year : ");
    scanf("%d", &year);
    if (year % 4 == 0 && year & 100 != 0 || year % 400 == 0)
        printf("\nYear %d is a leapyear.", year);
    else
        printf("\nYear %d is not a leapyear.", year);
    return 0;
}
/* --- End of letusc/lucproblem002.c --- */

// File: letusc/lucproblem003.c
// URL: https://github.com/notamitgamer/bsc/blob/main/letusc/lucproblem003.c

/* If a character is entered through the keyboard, Write a program
to determine whether the character is a capital letter, a small case letter,
a digit or a speacial symbol.
The following table shows the range of ASCII values for various characters :
    Characters              ASCII Values
    A - Z                   65 - 90
    a - z                   97 - 122
    0 - 9                   48 - 57
    special symbols         0 - 47, 58 - 64, 91 - 96, 123 - 127
*/
/* Author - Amit Dutta, Date - 02th OCT, 2025 */
/* Let Us C, Chap - 4, Page - 65, Problem 4.2 */

#include <stdio.h>
int main()
{
    char inp;
    printf("Enter one character : ");
    scanf(" %c", &inp);
    if (inp >= 64 && inp <= 90)
        printf("\nInput '%c' is a CAPITAL LETTER.", inp);
    if (inp >= 97 && inp <= 122)
        printf("\nInput '%c' is a SMALL CASE LETTER.", inp);
    if (inp >= 48 && inp <= 57)
        printf("\nInput '%c' is a DIGIT.", inp);
    if (inp >= 0 && inp <= 47 || inp >= 58 && inp <= 64 
        || inp >= 91 && inp <= 96 || inp >= 123 && inp <= 127)
        printf("\nInput '%c' is a SPECIAL SYMBOL.", inp);
    return 0;
}
/* --- End of letusc/lucproblem003.c --- */

// File: letusc/lucproblem004.c
// URL: https://github.com/notamitgamer/bsc/blob/main/letusc/lucproblem004.c

/* If the lengths of three sides of a triangle are entered through the
keyboard, write a program to check whether the triangle is valid or not.
The triangle is valid if the sum of two sides is greater that the largest
of the three sides. */
/* Author - Amit Dutta, Date - 02th OCT, 2025 */
/* Let Us C, Chap - 4, Page - 66, Problem 4.3 */

#include <stdio.h>
int main()
{
    double side1, side2, side3;
    printf("Enter the length of side1, side2 and side3 of the triangle : ");
    scanf("%lf %lf %lf", &side1, &side2, &side3);
    if (side1 <= 0 || side2 <= 0 || side3 <= 0)
    {
        printf("\nTriangle sides must be positive.\n");
        return 1;
    }
    if ((side1 + side2 > side3) && (side1 + side3 > side2) && (side2 + side3 > side1))
    // Triangle Inequality Theorem
        printf("\nThis triangle is valid.");
    else
        printf("\nThis triangle is not valid.");
    return 0;
}
/* --- End of letusc/lucproblem004.c --- */

// File: letusc/lucproblem005.c
// URL: https://github.com/notamitgamer/bsc/blob/main/letusc/lucproblem005.c

/* Write a program to calculate overtime pay of 10 employees. Overtime is
paid at the rate of Rs. 120.00 per hour for every hour worked above 40
hours. Assume that employees do not work for fractional part of an hour. */
/* ONLY WHILE LOOP ALLOWED */
/* Author - Amit Dutta, Date - 07th OCT, 2025 */
/* Let Us C, Chap - 5, Page - 83, Problem 5.1 */

#include <stdio.h>
#include <conio.h>
int main()
{
    int working_hour, i = 1;
    double pay;
    while (i <= 10)
    {
        printf("Enter the working hour for the employee no. %d : ", i);
        if (scanf("%d", &working_hour) != 1)
        {
            printf("\n\tPlease enter a number as woking hour.\n\n");
            while (getchar() != '\n')
                ;
            // above line discard the input characters untill getchar() reaches the new line character.
            /* if I do not discard the input, after 'continue;' statement that input will be again taken 
            by scanf (In the line 17). It will be a infinite loop of error. */
            continue;
        }
        // checking overtime
        if (working_hour > 40)
        {
            pay = (working_hour - 40) * 120.00;
            printf("\n\tOvertime working hours of Employee %d : %d", i, (working_hour - 40));
            printf("\n\tPay of the overtime for Employee %d   : Rs. %.2f\n\n", i, pay);
        }
        else
            printf("\n\tEmployee %d did not work any overtime.\n\n", i);
        i++; // changing to next employee
    }
}
/* --- End of letusc/lucproblem005.c --- */

// File: letusc/lucproblem006.c
// URL: https://github.com/notamitgamer/bsc/blob/main/letusc/lucproblem006.c

/* Write a program to find the factorial value of any number entered
through the keyboard. */
/* Author - Amit Dutta, Date - 07th OCT, 2025 */
/* Let Us C, Chap - 5, Page - 84, Problem 5.2 */

#include <stdio.h>
int main()
{
    int num, i = 1;
    long long fact = 1;
    printf("Enter the number : ");
    // checking if the input is valid or not
    if (scanf("%d", &num) != 1)
    {
        printf("\nPlease enter a number.");
        return 1;
    }
    // result for the negetive input
    if (num < 0)
    {
        printf("\nFactorial of %d : Undefined", num);
        return 1;
    }
    //  Hard codded result for input '0' (zero)
    if (num == 0)
    {
        printf("\nFactorial of 0 : 1");
        return 0;
    }
    // calculating result
    while (i <= num) {
        fact = fact * i;
        i++;
    }
    printf("\nFactorial of %d : %d", num, fact);
    return 0;
}
/* --- End of letusc/lucproblem006.c --- */

// File: letusc/lucproblem007.c
// URL: https://github.com/notamitgamer/bsc/blob/main/letusc/lucproblem007.c

/* Two numbers are entered through the keyboard. Write a program to
find the value of one number raised to the power of another */
/* Author - Amit Dutta, Date - 07th OCT, 2025 */
/* Let Us C, Chap - 5, Page - 84, Problem 5.3 */

#include <stdio.h>
int main()
{
    double num, result;
    int power, i = 1;
    printf("Enter the numbers in 'num^power' format : ");
    // checking if the input is valid or not
    if (scanf("%lf^%d", &num, &power) != 2)
    {
        printf("\nPlease enter numbers.");
        return 1;
    }
     // result for the negetive input
    if (power < 0)
    {
        printf("\nPlease use a positive number as power.");
        return 1;
    }
    //  Hard codded result for input '0' (zero)
    if (power == 0)
    {
        printf("\n%g to the power of %d is : 1", num, power);
        return 0;
    }
    result = num;
    while (i <= power - 1)
    {
        result = result * num;
        i++;
    }
    printf("\n%g to the power of %d is : %g", num, power, result);
    return 0;
}
/* --- End of letusc/lucproblem007.c --- */